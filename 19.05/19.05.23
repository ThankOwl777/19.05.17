형변환

형변환(Casting)
-> 변수 또는 상수의 타입을 다른 타입으로 변환하는 것

형변환 방법
-> (type)피연산자
-> 괄호() = 캐스트 연산자 또는 형변환 연산자
-> 피연산자의 값은 형변환 후에도 아무런 변화가 없다

-> 기본형(primitive type)에서 boolean을 제외한 나머지 타입들은 서로 형변환이 가능
-> float을 int로 변환할 때 반올림이 아닌 버림으로 처리

정수형
-> 큰 타입에서 작은 타입으로 변환하는 경우 값 손실(loss of data)이 발생
-> 4byte int에서 1byte byte으로 변환하는 경우 3byte 손실

-> 작은 타입에서 큰 타입으로 변환하는 경우 빈공간은 0 또는 1
-> 보통의 경우 0, 음수의 경우 1

-> Integer.toBinaryString(int i) 메서드 = 10진 정수를 2진 정수로 변환한 문자열 출력

실수형
-> 작은 타입에서 큰 타입으로 변환하는 경우 빈 공간은 0
-> float에서 double의 경우, 지수에서 127을 빼고 1023을 더해서 변환, 가수에서 23자리를 저장하고 빈 공간은 0
-> double에서 float의 경우, 지수에서 1023을 빼고 127을 더해서 변환, 가수에서 52자리 중 23자리만 저장, 나머지는 버린다
-> 단, 24번째 자리의 값이 1이면, 반올림이 발생하여 23자리의 값이 1 증가
-> float의 범위를 넘는 값을 float로 형변환하는 경우 '무한대' 또는 '0'

-> 같은 값을 저장해도 float와 double의 정밀도 차이 때문에 서로 다른 값이 저장
-> 저장할 때 값이 달라졌기 때문에, 형변환을 해도 값이 다르다

정수형을 실수형으로 변환
-> 소수점 이하의 값이 없으므로 비교적 간단
-> 정수를 2진수로 변환, 정규화를 거쳐 실수의 저장형식으로 저장
-> 실수형의 정밀도 제한으로 인한 오차가 발생 할 수 
