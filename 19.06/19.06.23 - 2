
String클래스의 생성자와 메서드
-> String(String s) : 주어진 문자열 s를 갖는 String인스턴스를 생성
  ex) String s = new String("Hello");
-> String(char[] value) : 주어진 문자열 value를 갖는 String인스턴스를 생성
  ex) char[] c = {'H', 'e', 'l', 'l', 'o'};
      String s = new String(c);
-> String(StringBuffer buf) : StringBuffer인스턴스가 갖고 있는 문자열과 같은 내용의 String인스턴스를 생성
  ex) StringBuffer sb = new StringBuffer("Hello");
      String s = new String(sb);
-> char charAt(int index) : 지정된 위치(index)에 있는 문자를 알려줌. index는 0부터 시작
  ex) String s = "Hello";
      String n = "012345";
      char c1 = s.charAt(1);
      char c2 = n.charAt(1);
-> int compareTo(String str) : 문자열과 사전순서로 비교. 같으면 0, 이전이면 음수, 이후면 양수를 반환
  ex) int i1 = "aaa".compareTo("aaa");
      int i2 = "aaa".compareTo("bbb");
      int i3 = "bbb".compareTo("aaa");
-> String concat(String str) : 문자열을 뒤에 덧붙임
  ex) String s1 = "Hello";
      String s2 = s1.concat(" World");
-> boolean contains(CharSequence s) : 지정된 문자열이 포함되었는지 검사
  ex) String s = "abcdefg";
      boolean b = s.contains("bc")
-> boolean endsWith(String suffix) : 지정된 문자열로 끝나는지 검사
  ex) String file = "Hello.txt"
      boolean b = file.endsWith(txt)
-> boolean equals(Object obj) : 매개변수로 받은 문자열과 String인스턴스의 문자열을 비교. 아니거나 다르면 false를 반환
  ex) String s = "Hello";
      boolean b1 = s.equals("Hello");
      boolean b2 = s.equals("hello");
-> boolean equalsIgnoreCase(String str) : 문자열과 String인스턴스의 문자열을 대소문자 구분없이 비교
  ex) String s = "Hello";
      boolean b1 = s.equalsIgnoreCase("HELLO");
      boolean b2 = s.equalsIgnoreCase("heLLo");
-> int indexOf(int ch) : 주어진 문자가 문자열에 존재하는지 확인하여 위치를 알려줌. 못 찾으면 -1을 반환
  ex) String s = "Hello";
      int idx1 = s.indexOf('o');
      int idx2 = s.indexOf('n');
-> int indexOf(int ch, int pos) : 주어진 문자가 문자열에 존재하는지 지정된 위치부터 확인하여 위치를 알려줌. 못 찾으면 -1을 반환
  ex) String s = "Hello";
      int idx1 = s.indexOf('e', 0);
      int idx2 = s.indexOf('e', 2);
-> int indexOf(String str) : 주어진 문자열이 존재하는지 확인하여 위치를 알려줌. 없으면 -1을 반환
  ex) String s = "ABCDEFG";
      int idx = s.indexOf("CD");
-> String intern() : 문자열을 상수풀에 등록. 같은 내용의 문자열이 있을 경우 주소값을 반환
  ex) String s1 = new String("abc");
      String s2 = new String("abc");
      boolean b1 = (s1 == s2);
      boolean b2 = s1.equals(s2);
      boolean b3 = (s1.intern() == s2.intern());
-> int lastIndexOf(int ch) : 지정된 문자 또는 문자코드를 문자열의 오른쪽 끝에서부터 찾아서 위치를 알려줌. 못 찾으면 -1을 반환
  ex) String s = "java.lang.Object";
      int idx1 = s.lastIndexOf('.');
      int idx2 = s.indexOf('.');
-> int lastIndexOf(String str) : 지정된 문자열을 인스턴스의 문자열 끝에서부터 찾아서 위치를 알려줌. 못 찾으면 -1을 반환
  ex) String s = "java.lang.java";
      int idx1 = s.lastIndexOf("java");
      int idx2 = s.indexOf("java");
-> int length() : 문자열의 길이를 알려줌
  ex) String s = "Hello";
      int length = s.length();
-> String replace(char old, char new) : 문자열 중의 문자(old)를 새로운 문자(new)로 바꾼 문자열을 반환함
  ex) String s = "Hello";
      String s1 = s.replace('H', 'C');
->
